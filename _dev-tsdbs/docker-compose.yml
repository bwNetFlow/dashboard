version: '2'
services:

  # grafa config 
  grafana-data:
    image: omi-registry.e-technik.uni-ulm.de/bwnetflow/kafka/grafana_dashboard
    restart: "no"

  # grafana dashboard, at http://localhost:3000
  grafana:
    image: grafana/grafana:latest
    environment:
      GF_DASHBOARDS_JSON_ENABLED: 'true'
      GF_SECURITY_ADMIN_PASSWORD: secret
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_SECRET_KEY: secret
    volumes_from:
    - grafana-data
    ports:
    - 3000:3000/tcp

  # chronograf dashboard, at http://localhost:8888
  chronograf:
    image: chronograf
    restart: always
    ports:
     - 8888:8888
    command: --influxdb-url=http://influxdb:8086


  # tsdb prometheus, net-host to scrape your dashboard consumer at localhost:8080
  prometheus:
    image: prom/prometheus
    volumes:
    - ./prometheus.yml:/etc/prometheus/prometheus.yml
    - ./rules.yml:/etc/prometheus/rules.yml
    ports:
    - 9090:9090/tcp
    network_mode: "host"    
    command:
    - --config.file=/etc/prometheus/prometheus.yml
    - --storage.tsdb.path=/prometheus
    - --web.console.libraries=/usr/share/prometheus/console_libraries
    - --web.console.templates=/usr/share/prometheus/consoles
    - --storage.tsdb.retention=31d

  # tsdb influxdb, available at localhost:8086
  influxdb:
    image: influxdb:1.7-alpine
    restart: always
    stdin_open: true
    environment:
    - INFLUXDB_HTTP_AUTH_ENABLED=true
    - INFLUXDB_ADMIN_USER=admin
    - INFLUXDB_ADMIN_PASSWORD=secret
    - INFLUXDB_HTTP_MAX_BODY_SIZE=0
    ports:
     - 8086:8086